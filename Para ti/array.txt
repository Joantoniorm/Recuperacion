1. Agregar y eliminar elementos
push: Agrega uno o más elementos al final de un array.
pop: Elimina el último elemento de un array y lo devuelve.
unshift: Agrega uno o más elementos al principio de un array.
shift: Elimina el primer elemento de un array y lo devuelve.
javascript
let array = [1, 2, 3];

// push
array.push(4); // [1, 2, 3, 4]

// pop
let lastElement = array.pop(); // 4, array ahora es [1, 2, 3]

// unshift
array.unshift(0); // [0, 1, 2, 3]

// shift
let firstElement = array.shift(); // 0, array ahora es [1, 2, 3]
----------------------------------------------------------------------------------------------
2. Buscar en un array
indexOf: Devuelve el primer índice en el que se encuentra un elemento dado, o -1 si no se encuentra.
includes: Determina si un array contiene un valor determinado.
find: Devuelve el primer elemento del array que cumple con la condición de la función proporcionada.
findIndex: Devuelve el índice del primer elemento del array que cumple con la condición de la función proporcionada.
javascript

let array = [1, 2, 3, 4, 5];

// indexOf
let index = array.indexOf(3); // 2

// includes
let contains = array.includes(3); // true

// find
let found = array.find(element => element > 3); // 4

// findIndex
let foundIndex = array.findIndex(element => element > 3); // 3
----------------------------------------------------------------------------------------------
3. Iterar sobre un array
forEach: Ejecuta una función para cada elemento del array.
javascript

let array = [1, 2, 3, 4, 5];

array.forEach(element => {
    console.log(element);
});
// Salida: 1 2 3 4 5
----------------------------------------------------------------------------------------------
4. Transformar un array
map: Crea un nuevo array con los resultados de aplicar una función a cada elemento del array.
filter: Crea un nuevo array con todos los elementos que cumplen con la condición de la función proporcionada.
reduce: Aplica una función a un acumulador y a cada elemento del array (de izquierda a derecha) para reducirlo a un solo valor.
javascript

let array = [1, 2, 3, 4, 5];

// map
let doubled = array.map(element => element * 2); // [2, 4, 6, 8, 10]

// filter
let even = array.filter(element => element % 2 === 0); // [2, 4]

// reduce
let sum = array.reduce((accumulator, currentValue) => accumulator + currentValue, 0); // 15
----------------------------------------------------------------------------------------------
5. Dividir y combinar arrays
slice: Devuelve una copia de una parte del array dentro de un nuevo array.
splice: Cambia el contenido de un array eliminando, reemplazando o agregando nuevos elementos.
concat: Se usa para combinar dos o más arrays.
javascript

let array = [1, 2, 3, 4, 5];

// slice
let part = array.slice(1, 3); // [2, 3]

// splice
array.splice(1, 2, 'a', 'b'); // array ahora es [1, 'a', 'b', 4, 5]

// concat
let array1 = [1, 2];
let array2 = [3, 4];
let combined = array1.concat(array2); // [1, 2, 3, 4]
6. Ordenar y revertir
sort: Ordena los elementos de un array.
reverse: Invierte el orden de los elementos de un array.
javascript
Copiar código
let array = [5, 3, 8, 1, 2];

// sort
array.sort((a, b) => a - b); // [1, 2, 3, 5, 8]

// reverse
array.reverse(); // [8, 5, 3, 2, 1]